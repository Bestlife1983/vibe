name: Release for nvidia GPUs - fast

on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            matrix:
                cuda-toolkit:
                    - version: '12.5.0'
                      url: 'https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda_12.5.0_555.85_windows.exe'
                    - version: '11.0.2'
                      url: 'https://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_451.48_win10.exe'

        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4

            - name: Add msbuild to PATH
              uses: microsoft/setup-msbuild@v2

            - name: Install CUDA Toolkit
              id: cuda-toolkit
              run: |
                  C:\msys64\usr\bin\wget.exe -O cuda_installer.exe '${{ matrix.cuda-toolkit.url }}'
                  7z x cuda_installer.exe -y -o"C:\cuda"
                  $cuda_version = Get-ChildItem -Path "C:\cuda" -Directory | Select-Object -First 1 -ExpandProperty Name
                  Write-Output "CUDA Version: $cuda_version"
                  echo "CUDA_PATH=C:\cuda\$cuda_version" >> $GITHUB_ENV
                  echo "CUDA_VERSION=$cuda_version" >> $GITHUB_ENV
              shell: pwsh

            - name: Cache CUDA
              id: cache-cuda
              uses: actions/cache@v4
                with:
                  path: C:\cuda
                  key: ${{ runner.os }}-cuda

            - name: setup Bun
              uses: oven-sh/setup-bun@v1

            - name: Rust cache
              uses: swatinem/rust-cache@v2

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: Install frontend dependencies
              run: bun install
              working-directory: ./desktop

            # Run pre build
            - name: Run pre_build.js
              run: bun scripts/pre_build.js --nvidia

            - name: Build
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
                  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
              with:
                  args: --target x86_64-pc-windows-msvc
                  projectPath: './desktop'
                  tauriScript: bunx tauri

            - name: Rename installer
              run: |
                  # Get the list of exe files in the directory
                  $file = Get-ChildItem -Path "target\release\bundle\nsis\*.exe" | Select-Object
                  # Split the file name and extension
                  $name = $file.BaseName
                  $ext = $file.Extension

                  # New file name
                  $new_name = "{0}_nvidia_{1}{2}" -f $name, $env:CUDA_VERSION, $ext

                  # Rename the file
                  Rename-Item -Path $file.FullName -NewName $new_name

              shell: pwsh

            - name: Upload installer
              uses: actions/upload-artifact@v4
              with:
                  path: target\release\bundle\nsis\*.exe
